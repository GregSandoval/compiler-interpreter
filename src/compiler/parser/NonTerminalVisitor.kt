package compiler.parser

import compiler.parser.Symbol.NonTerminal
import compiler.parser.Symbol.NonTerminal.*


interface NonTerminalVisitor {
    fun accept(node: NonTerminal) = when (node) {
        is Program -> visit(node)
        is Main -> visit(node)
        is BasicBlock -> visit(node)
        is VariableGroup -> visit(node)
        is ParenthesizedVariabledList -> visit(node)
        is VariableList -> visit(node)
        is VariableItem -> visit(node)
        is VariableItemSuffix -> visit(node)
        is VariableDecleration -> visit(node)
        is Simplekind -> visit(node)
        is BaseKind -> visit(node)
        is ClassIdentifier -> visit(node)
        is VariableSpec -> visit(node)
        is VariableIdentifier -> visit(node)
        is ArraySpec -> visit(node)
        is KKint -> visit(node)
        is DereferencedIdentifier -> visit(node)
        is Dereference -> visit(node)
        is VariableInitializer -> visit(node)
        is BracedExprersions -> visit(node)
        is ExpressionList -> visit(node)
        is MoreExpressions -> visit(node)
        is Classdecl -> visit(node)
        is ClassDefinition -> visit(node)
        is ClassDefinitionSuffix -> visit(node)
        is BracedClassItems -> visit(node)
        is ClassHeader -> visit(node)
        is ClassParent -> visit(node)
        is ClassItems -> visit(node)
        is ClassGroup -> visit(node)
        is ClassVisibility -> visit(node)
        is Interfaces -> visit(node)
        is MethodDeclerations -> visit(node)
        is MethodHeader -> visit(node)
        is MethodIdentifier -> visit(node)
        is FunctionDefinitions -> visit(node)
        is FunctionDefinition -> visit(node)
        is FunctionHeader -> visit(node)
        is FunctionIdentifier -> visit(node)
        is ReturnKind -> visit(node)
        is ParenthesizedParameterList -> visit(node)
        is VariableSpecs -> visit(node)
        is MoreVariableSpecs -> visit(node)
        is PPonly -> visit(node)
        is Statements -> visit(node)
        is Statement -> visit(node)
        is AssignmentOrFunction -> visit(node)
        is AssignmentOrFunctionSuffix -> visit(node)
        is AssignmentSuffix -> visit(node)
        is LeftValueSuffix -> visit(node)
        is Lval -> visit(node)
        is LeftValueOrFunction -> visit(node)
        is LeftValueOrFunctionSuffix -> visit(node)
        is Lval_Tail -> visit(node)
        is BracketedExpression -> visit(node)
        is Fcall -> visit(node)
        is ParenthesizedExpressions -> visit(node)
        is IfStatement -> visit(node)
        is ElsePartialStatement -> visit(node)
        is WhileStatement -> visit(node)
        is PrintStatement -> visit(node)
        is InputStatement -> visit(node)
        is ReturnStatement -> visit(node)
        is ReturnStatementSuffix -> visit(node)
        is ParenthesizedExpression -> visit(node)
        is Expression -> visit(node)
        is ExpressionSuffix -> visit(node)
        is Rterm -> visit(node)
        is RtermSuffix -> visit(node)
        is Term -> visit(node)
        is TermSuffix -> visit(node)
        is Fact -> visit(node)
        is BaseLiteral -> visit(node)
        is AddressOfIdentifier -> visit(node)
        is RelationalOperator -> visit(node)
        is Lthan -> visit(node)
        is Gthan -> visit(node)
        is PlusOrMinus -> visit(node)
        is MultiplyOrDivideOrExponentiateOrModulus -> visit(node)
        is Epsilon -> visit(node)
        is NULL_NODE -> visit(node)
        is ParseTreeSentinel -> visit(node)
    }

    fun visit(parseTreeSentinel: ParseTreeSentinel)
    fun visit(nullNode: NULL_NODE)
    fun visit(program: Program)
    fun visit(main: Main)
    fun visit(basicBlock: BasicBlock)
    fun visit(variableGroup: VariableGroup)
    fun visit(parenthesizedVariabledList: ParenthesizedVariabledList)
    fun visit(variableList: VariableList)
    fun visit(variableItem: VariableItem)
    fun visit(variableItem_Suffix: VariableItemSuffix)
    fun visit(variableDecleration: VariableDecleration)
    fun visit(simplekind: Simplekind)
    fun visit(baseKind: BaseKind)
    fun visit(classIdentifier: ClassIdentifier)
    fun visit(variableSpec: VariableSpec)
    fun visit(variableIdentifier: VariableIdentifier)
    fun visit(arraySpec: ArraySpec)
    fun visit(kKint: KKint)
    fun visit(dereferencedIdentifier: DereferencedIdentifier)
    fun visit(dereference: Dereference)
    fun visit(variableInitializer: VariableInitializer)
    fun visit(bracedExprersions: BracedExprersions)
    fun visit(expressionList: ExpressionList)
    fun visit(moreExpressions: MoreExpressions)
    fun visit(classdecl: Classdecl)
    fun visit(classDefinition: ClassDefinition)
    fun visit(classDefSuffix: ClassDefinitionSuffix)
    fun visit(bBClassitems: BracedClassItems)
    fun visit(classHeader: ClassHeader)
    fun visit(classParent: ClassParent)
    fun visit(classItems: ClassItems)
    fun visit(classGroup: ClassGroup)
    fun visit(classVisibility: ClassVisibility)
    fun visit(interfaces: Interfaces)
    fun visit(methodDeclerations: MethodDeclerations)
    fun visit(methodHeader: MethodHeader)
    fun visit(methodIdentifier: MethodIdentifier)
    fun visit(functionDefinitions: FunctionDefinitions)
    fun visit(functionDefinition: FunctionDefinition)
    fun visit(functionHeader: FunctionHeader)
    fun visit(functionIdentifier: FunctionIdentifier)
    fun visit(returnKind: ReturnKind)
    fun visit(parenthesizedParameterList: ParenthesizedParameterList)
    fun visit(variableSpecs: VariableSpecs)
    fun visit(moreVariableSpecs: MoreVariableSpecs)
    fun visit(pPonly: PPonly)
    fun visit(statements: Statements)
    fun visit(statement: Statement)
    fun visit(assignmentOrFunction: AssignmentOrFunction)
    fun visit(assignmentOrFunctionSuffix: AssignmentOrFunctionSuffix)
    fun visit(assignmentSuffix: AssignmentSuffix)
    fun visit(leftValueSuffix: LeftValueSuffix)
    fun visit(lval: Lval)
    fun visit(leftValueOrFunction: LeftValueOrFunction)
    fun visit(leftValueOrFunctionSuffix: LeftValueOrFunctionSuffix)
    fun visit(lvalTail: Lval_Tail)
    fun visit(bracketedExpression: BracketedExpression)
    fun visit(fcall: Fcall)
    fun visit(parenthesizedExpressions: ParenthesizedExpressions)
    fun visit(ifStatement: IfStatement)
    fun visit(elsePartialStatement: ElsePartialStatement)
    fun visit(whileStatement: WhileStatement)
    fun visit(printStatement: PrintStatement)
    fun visit(inputStatement: InputStatement)
    fun visit(returnStatement: ReturnStatement)
    fun visit(returnStatementSuffix: ReturnStatementSuffix)
    fun visit(parenthesizedExpression: ParenthesizedExpression)
    fun visit(expression: Expression)
    fun visit(expressionSuffix: ExpressionSuffix)
    fun visit(rterm: Rterm)
    fun visit(rtermSuffix: RtermSuffix)
    fun visit(term: Term)
    fun visit(termSuffix: TermSuffix)
    fun visit(fact: Fact)
    fun visit(baseLiteral: BaseLiteral)
    fun visit(addressOfIdentifier: AddressOfIdentifier)
    fun visit(relationalOperator: RelationalOperator)
    fun visit(lthan: Lthan)
    fun visit(gthan: Gthan)
    fun visit(plusOrMinus: PlusOrMinus)
    fun visit(multiplyOrDivideOrExponentiate: MultiplyOrDivideOrExponentiateOrModulus)
    fun visit(epsilon: Epsilon)
}
